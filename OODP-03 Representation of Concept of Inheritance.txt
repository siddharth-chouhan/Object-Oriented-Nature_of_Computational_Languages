#!/usr/bin/env python
# coding: utf-8

# 
# 
# OODP-01 Create your own I_SET class;
# 
# Design and Implement your own integer set class with class name New_Set
# 
# The above class must have following methods-
# 
# inserting element in a set 
# check a membership of the element e - if it is present in a set then return is_member else return not_a_member 
# Remove the element e from a given set if e is in self removes it from self otherwise raise a ValueError if member not in self (NewSet)
# Get all the members of the list 
# Get members of self in descending order 
# Note: Add appropriate docstring as and when required

# In[3]:


class New_Set:
   
    def __init__(self):
        self._members = []

    def insert(self, e: int) -> None:
       
        if e not in self._members:
            self._members.append(e)

    def is_member(self, e: int) -> bool:
      
        return e in self._members

    def remove(self, e: int) -> None:
        
        if e in self._members:
            self._members.remove(e)
        else:
            raise ValueError(f"{e} is not a member of the set")

    def get_members(self) -> list[int]:
      
        return self._members

    def get_members_descending(self) -> list[int]:
       
        return sorted(self._members, reverse=True)


# In[4]:


s = New_Set()
s.insert(3)
s.insert(1)
s.insert(4)
print(s.get_members())  # Output: [3, 1, 4]
print(s.is_member(3))   # Output: True
print(s.is_member(2))   # Output: False
s.remove(3)
print(s.get_members())  # Output: [1, 4]
print(s.get_members_descending())  # Output: [4, 1]


# 
# 
# OODP-02 Create Return on Investment class for UX and Usability Firm (Case Based Approach)
# 
# Mock Client: Human Factors Internationals (HFI)
# 
# Client Specifications are shared in this Link: http://hfiacademy.com/roi_increased_conversion_rate.phpLinks to an external site.
# 
# 1. You are working as an oops designer and programmer  in one of the reputed firm in the World.
# 
# 2. You are been asked to create a ROI Increased conversion rate calculator using OOPS principles by your Manager. Having said that you are experienced individual who knows the principles of oops and python.
# 
# 3. Design the requirements and implement the OOP for the ROI Increased conversion rate calculator

# In[ ]: